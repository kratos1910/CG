#include<windows.h>
#include <GL/glut.h>

float angle = 0.0f;
float scaleX = 1.0f;
float translateX = 0.0f;
float translateY = 0.0f;

void display()
{
    glClear(GL_COLOR_BUFFER_BIT);
    glLoadIdentity();

    // Apply transformations
    glTranslatef(translateX, translateY, 0.0f); // Translation
    glRotatef(angle, 0.0f, 0.0f, 1.0f);         // Rotation
    glScalef(scaleX, scaleX, scaleX);             // Scaling

    // Set color to green
    glColor3f(0.0f, 1.0f, 0.0f); // Green color

    // Draw your object here (e.g., a square)
    glBegin(GL_QUADS);
    glVertex2f(-0.5f, -0.5f);
    glVertex2f(0.5f, -0.5f);
    glVertex2f(0.5f, 0.5f);
    glVertex2f(-0.5f, 0.5f);
    glEnd();

    glFlush();
}




void keyboard(unsigned char key, int x, int y)
{
    switch(key)
    {
    case 'r':
        angle += 5.0f;  // Rotate clockwise by 5 degrees
        break;
     case '+':
        scaleX += 0.1f; // Scale up
        break;
    case '-':
        scaleX -= 0.1f; // Scale down
        if (scaleX < 0.1f)
            scaleX = 0.1f; // Prevent scaling down too small
        break;

    case 'd':
        translateX += 0.1f; // Translate 0.1 units to the right
        break;
    case 'a':
        translateX -= 0.1f; // Translate 0.1 units to the left
        break;
    case 'w':
        translateY += 0.1f; // Translate 0.1 units upwards
        break;
    case 's':
        translateY -= 0.1f; // Translate 0.1 units downwards
        break;
    }
    glutPostRedisplay(); // Redraw the scene
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(500, 500);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("vtucode | 2D Transformation");
    glClearColor(0.0f, 0.0f, 0.0f, 1.0f);
    glutDisplayFunc(display);

    glutKeyboardFunc(keyboard);
    glutMainLoop();
    return 0;
}
